datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  OWNER
  STAFF
}

model User {
  id           String   @id @default(uuid())
  fullName     String
  nic          String
  mobileNumber String
  email        String   @unique
  username     String   @unique
  passwordHash String
  role         UserRole
  createdAt    DateTime @default(now())

  // ðŸ‘‡ Back-relation for orders created by this staff user (no DB change)
  staffOrders Order[] @relation("StaffOrders")
}

model Customer {
  id        String   @id @default(uuid())
  fullName  String
  phone     String
  email     String?  @unique
  createdAt DateTime @default(now())

  orders Order[]
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
}

model Product {
  id          String   @id @default(uuid())
  name        String
  price       Float
  description String?
  barcode     String? @unique
  imageUrl    String?
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])
  createdAt   DateTime @default(now())

  items OrderItem[]
}

model Order {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  totalAmount Float
  status      String   @default("PENDING")

  paymentMethod String?
  saleType      String?

  staffId String
  staff   User   @relation("StaffOrders", fields: [staffId], references: [id])

  customerId String
  customer   Customer @relation(fields: [customerId], references: [id])

  items OrderItem[]
}

model OrderItem {
  id        String @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Float

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}